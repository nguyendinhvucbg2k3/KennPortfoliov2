rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Checks if the user is signed in.
     * @path N/A
     * @allow N/A
     * @deny N/A
     * @principle Authentication is required for certain actions.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Checks if the user is an admin by verifying the existence of their profile.
     * @path N/A
     * @allow N/A
     * @deny N/A
     * @principle Admins can manage content.
     */
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    /**
     * @description Checks if the user is the owner of the resource.
     * @path N/A
     * @allow N/A
     * @deny N/A
     * @principle Resource ownership is required for certain actions.
     */
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    /**
     * @description Checks if the user is the existing owner of the resource.
     * @path N/A
     * @allow N/A
     * @deny N/A
     * @principle Resource ownership is required for certain actions.
     */
    function isExistingOwner(userId) {
        return (isOwner(userId) && resource != null);
    }

    match /projects/{projectId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn() && isAdmin();
      allow update: if isSignedIn() && isAdmin();
      allow delete: if isSignedIn() && isAdmin();
    }

    match /resources/{resourceId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn() && isAdmin();
      allow update: if isSignedIn() && isAdmin();
      allow delete: if isSignedIn() && isAdmin();
    }

    match /experience/{experienceId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn() && isAdmin();
      allow update: if isSignedIn() && isAdmin();
      allow delete: if isSignedIn() && isAdmin();
    }

    match /skills/{skillId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn() && isAdmin();
      allow update: if isSignedIn() && isAdmin();
      allow delete: if isSignedIn() && isAdmin();
    }

    match /personalInfo/{document=main} {
      allow get: if true;
      allow create: if isSignedIn() && isAdmin();
      allow update: if isSignedIn() && isAdmin();
      allow delete: if isSignedIn() && isAdmin();
    }

    match /admins/{uid} {
      allow get: if request.auth.uid == uid;
      allow list: if false;
      allow create: if request.auth.uid == uid;
      allow update: if false;
      allow delete: if false;
    }
  }
}